# Generated by Django 4.2.16 on 2025-07-17 17:07

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("icfes", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AreaEvaluacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("color_tema", models.CharField(default="#3B82F6", max_length=7)),
                ("icono_url", models.URLField(blank=True, max_length=500, null=True)),
                ("orden_visualizacion", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Área de Evaluación",
                "verbose_name_plural": "Áreas de Evaluación",
                "db_table": "areas_evaluacion",
                "ordering": ["orden_visualizacion", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="AreaTematica",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50)),
                ("nombre", models.CharField(max_length=200)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("keywords", models.JSONField(blank=True, default=list)),
                ("color_tema", models.CharField(blank=True, max_length=7, null=True)),
                ("icono_url", models.URLField(blank=True, max_length=500, null=True)),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "area_evaluacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="areas_tematicas",
                        to="icfes.areaevaluacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Área Temática",
                "verbose_name_plural": "Áreas Temáticas",
                "db_table": "areas_tematicas",
                "ordering": ["area_evaluacion", "orden", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="CompetenciaICFES",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=200)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "area_evaluacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competencias",
                        to="icfes.areaevaluacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Competencia ICFES",
                "verbose_name_plural": "Competencias ICFES",
                "db_table": "competencias_icfes",
                "ordering": ["area_evaluacion", "orden", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="ComponenteConocimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50)),
                ("nombre", models.CharField(max_length=200)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                (
                    "competencia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="componentes",
                        to="icfes.competenciaicfes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Componente de Conocimiento",
                "verbose_name_plural": "Componentes de Conocimiento",
                "db_table": "componentes_conocimiento",
                "ordering": ["competencia", "orden"],
            },
        ),
        migrations.CreateModel(
            name="ContextoAplicacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("orden", models.IntegerField(default=0)),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Contexto de Aplicación",
                "verbose_name_plural": "Contextos de Aplicación",
                "db_table": "contextos_aplicacion",
                "ordering": ["orden", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="CuadernilloICFES",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=200)),
                (
                    "tipo_cuadernillo",
                    models.CharField(
                        choices=[
                            ("SABER_11", "Saber 11"),
                            ("SABER_PRO", "Saber Pro"),
                            ("SIMULACRO", "Simulacro"),
                            ("PRACTICA", "Práctica"),
                        ],
                        default="SABER_11",
                        max_length=20,
                    ),
                ),
                ("grado_escolar", models.IntegerField()),
                ("total_preguntas", models.IntegerField(default=0)),
                (
                    "archivo_fuente_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("procesado", models.BooleanField(default=False)),
                ("notas_procesamiento", models.TextField(blank=True, null=True)),
                ("metadatos", models.JSONField(blank=True, default=dict)),
                ("activo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "area_evaluacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cuadernillos",
                        to="icfes.areaevaluacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cuadernillo ICFES",
                "verbose_name_plural": "Cuadernillos ICFES",
                "db_table": "cuadernillos_icfes",
                "ordering": [
                    "-periodo_aplicacion__fecha_inicio",
                    "area_evaluacion",
                    "nombre",
                ],
            },
        ),
        migrations.CreateModel(
            name="PeriodoAplicacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=20, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("fecha_inicio", models.DateField(blank=True, null=True)),
                ("fecha_fin", models.DateField(blank=True, null=True)),
                ("activo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Período de Aplicación",
                "verbose_name_plural": "Períodos de Aplicación",
                "db_table": "periodos_aplicacion",
                "ordering": ["-fecha_inicio"],
            },
        ),
        migrations.CreateModel(
            name="ProcesoCognitivo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True, null=True)),
                (
                    "nivel_bloom",
                    models.IntegerField(
                        help_text="Nivel según taxonomía de Bloom (1-6)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Proceso Cognitivo",
                "verbose_name_plural": "Procesos Cognitivos",
                "db_table": "procesos_cognitivos",
                "ordering": ["nivel_bloom", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="TipoConocimiento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("activo", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Tipo de Conocimiento",
                "verbose_name_plural": "Tipos de Conocimiento",
                "db_table": "tipos_conocimiento",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="TemaEspecifico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=300)),
                ("descripcion", models.TextField(blank=True, null=True)),
                ("keywords", models.JSONField(blank=True, default=list)),
                (
                    "prerequisitos_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "nivel_dificultad",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("activo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "area_tematica",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temas",
                        to="icfes.areatematica",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tema Específico",
                "verbose_name_plural": "Temas Específicos",
                "db_table": "temas_especificos",
                "ordering": ["area_tematica", "nivel_dificultad", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="PreguntaICFES",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "id_pregunta_original",
                    models.IntegerField(help_text="ID del archivo Excel original"),
                ),
                (
                    "numero_pregunta",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "pregunta_texto",
                    models.TextField(help_text="Texto completo de la pregunta"),
                ),
                (
                    "afirmacion",
                    models.TextField(
                        blank=True,
                        help_text="Lo que se evalúa específicamente",
                        null=True,
                    ),
                ),
                (
                    "evidencia",
                    models.TextField(
                        blank=True, help_text="Evidencia de aprendizaje", null=True
                    ),
                ),
                (
                    "nivel_dificultad",
                    models.IntegerField(
                        help_text="Nivel de dificultad del 1 al 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "nivel_desempeno_esperado",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("INSUFICIENTE", "Insuficiente"),
                            ("MINIMO", "Mínimo"),
                            ("SATISFACTORIO", "Satisfactorio"),
                            ("AVANZADO", "Avanzado"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "tiempo_estimado_segundos",
                    models.IntegerField(
                        help_text="Tiempo estimado de respuesta en segundos"
                    ),
                ),
                (
                    "grado_escolar",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(9),
                            django.core.validators.MaxValueValidator(11),
                        ]
                    ),
                ),
                (
                    "respuesta_correcta",
                    models.CharField(
                        choices=[
                            ("A", "Opción A"),
                            ("B", "Opción B"),
                            ("C", "Opción C"),
                            ("D", "Opción D"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "puntos_xp",
                    models.IntegerField(
                        default=20,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                ("requiere_imagen", models.BooleanField(default=False)),
                (
                    "imagen_pregunta_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                ("verificada", models.BooleanField(default=False)),
                ("activa", models.BooleanField(default=True)),
                ("veces_preguntada", models.IntegerField(default=0)),
                ("veces_correcta", models.IntegerField(default=0)),
                ("tiempo_promedio_respuesta", models.FloatField(default=0.0)),
                ("fecha_aplicacion", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "area_evaluacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.areaevaluacion",
                    ),
                ),
                (
                    "area_tematica",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.areatematica",
                    ),
                ),
                (
                    "competencia",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.competenciaicfes",
                    ),
                ),
                (
                    "componente",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.componenteconocimiento",
                    ),
                ),
                (
                    "contexto_aplicacion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.contextoaplicacion",
                    ),
                ),
                (
                    "cuadernillo",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.cuadernilloicfes",
                    ),
                ),
                (
                    "proceso_cognitivo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.procesocognitivo",
                    ),
                ),
                (
                    "tema_especifico",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.temaespecifico",
                    ),
                ),
                (
                    "tipo_conocimiento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preguntas",
                        to="icfes.tipoconocimiento",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pregunta ICFES",
                "verbose_name_plural": "Preguntas ICFES",
                "db_table": "preguntas_icfes",
                "ordering": ["cuadernillo", "numero_pregunta"],
            },
        ),
        migrations.CreateModel(
            name="PistaPregunta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "numero_pista",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("texto_pista", models.TextField()),
                (
                    "tipo_pista",
                    models.CharField(
                        choices=[
                            ("CONCEPTUAL", "Conceptual"),
                            ("PROCEDIMENTAL", "Procedimental"),
                            ("ESTRATEGICA", "Estratégica"),
                            ("CONTEXTO", "De Contexto"),
                        ],
                        default="CONCEPTUAL",
                        max_length=50,
                    ),
                ),
                (
                    "rol_objetivo",
                    models.CharField(
                        choices=[
                            ("ALL", "Todos"),
                            ("TANK", "Tanque"),
                            ("DPS", "Atacante"),
                            ("SUPPORT", "Soporte"),
                            ("SPECIALIST", "Especialista"),
                        ],
                        default="ALL",
                        max_length=20,
                    ),
                ),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pistas",
                        to="icfes.preguntaicfes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pista de Pregunta",
                "verbose_name_plural": "Pistas de Preguntas",
                "db_table": "pistas_pregunta",
                "ordering": ["pregunta", "numero_pista"],
            },
        ),
        migrations.CreateModel(
            name="OpcionRespuesta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "letra_opcion",
                    models.CharField(
                        choices=[
                            ("A", "Opción A"),
                            ("B", "Opción B"),
                            ("C", "Opción C"),
                            ("D", "Opción D"),
                        ],
                        max_length=1,
                    ),
                ),
                ("texto_opcion", models.TextField()),
                ("es_correcta", models.BooleanField()),
                (
                    "imagen_opcion_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "tipo_distractor",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("explicacion_opcion", models.TextField(blank=True, null=True)),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="opciones",
                        to="icfes.preguntaicfes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Opción de Respuesta",
                "verbose_name_plural": "Opciones de Respuesta",
                "db_table": "opciones_respuesta",
                "ordering": ["pregunta", "orden", "letra_opcion"],
            },
        ),
        migrations.CreateModel(
            name="ExplicacionRespuesta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipo_explicacion",
                    models.CharField(
                        choices=[
                            ("SOLUCION", "Solución"),
                            ("TEORIA", "Teoría"),
                            ("ESTRATEGIA", "Estrategia"),
                            ("CONTEXTO", "Contexto"),
                        ],
                        max_length=50,
                    ),
                ),
                ("titulo", models.CharField(blank=True, max_length=200, null=True)),
                ("contenido", models.TextField()),
                (
                    "rol_objetivo",
                    models.CharField(
                        choices=[
                            ("ALL", "Todos"),
                            ("TANK", "Tanque"),
                            ("DPS", "Atacante"),
                            ("SUPPORT", "Soporte"),
                            ("SPECIALIST", "Especialista"),
                        ],
                        default="ALL",
                        max_length=20,
                    ),
                ),
                (
                    "nivel_detalle",
                    models.CharField(
                        choices=[
                            ("BASICO", "Básico"),
                            ("MEDIO", "Medio"),
                            ("AVANZADO", "Avanzado"),
                        ],
                        default="MEDIO",
                        max_length=20,
                    ),
                ),
                (
                    "imagen_explicacion_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "video_explicacion_url",
                    models.URLField(blank=True, max_length=500, null=True),
                ),
                (
                    "dificultad_explicacion",
                    models.IntegerField(
                        default=2,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "tiempo_lectura_estimado",
                    models.IntegerField(
                        blank=True,
                        help_text="Tiempo estimado de lectura en segundos",
                        null=True,
                    ),
                ),
                ("orden", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="explicaciones",
                        to="icfes.preguntaicfes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Explicación de Respuesta",
                "verbose_name_plural": "Explicaciones de Respuestas",
                "db_table": "explicaciones_respuesta",
                "ordering": ["pregunta", "orden", "tipo_explicacion"],
            },
        ),
        migrations.CreateModel(
            name="ErrorComun",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("descripcion_error", models.TextField()),
                (
                    "opcion_elegida",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "Opción A"),
                            ("B", "Opción B"),
                            ("C", "Opción C"),
                            ("D", "Opción D"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "frecuencia_error",
                    models.FloatField(
                        default=0.0,
                        help_text="Porcentaje de estudiantes que cometen este error",
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("explicacion_error", models.TextField(blank=True, null=True)),
                ("sugerencia_correccion", models.TextField(blank=True, null=True)),
                ("activo", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="errores_comunes",
                        to="icfes.preguntaicfes",
                    ),
                ),
            ],
            options={
                "verbose_name": "Error Común",
                "verbose_name_plural": "Errores Comunes",
                "db_table": "errores_comunes",
                "ordering": ["pregunta", "-frecuencia_error"],
            },
        ),
        migrations.AddField(
            model_name="cuadernilloicfes",
            name="periodo_aplicacion",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cuadernillos",
                to="icfes.periodoaplicacion",
            ),
        ),
        migrations.CreateModel(
            name="RespuestaUsuarioICFES",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "opcion_seleccionada",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A", "Opción A"),
                            ("B", "Opción B"),
                            ("C", "Opción C"),
                            ("D", "Opción D"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("es_correcta", models.BooleanField()),
                (
                    "tiempo_respuesta_segundos",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "nivel_confianza",
                    models.IntegerField(
                        blank=True,
                        help_text="Nivel de confianza del 1 al 5",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "tipo_evaluacion",
                    models.CharField(
                        choices=[
                            ("PRACTICA", "Práctica"),
                            ("SIMULACRO", "Simulacro"),
                            ("BATALLA", "Batalla"),
                            ("DIAGNOSTICO", "Diagnóstico"),
                            ("EXAMEN", "Examen"),
                        ],
                        default="PRACTICA",
                        max_length=50,
                    ),
                ),
                (
                    "dispositivo",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MOBILE", "Móvil"),
                            ("DESKTOP", "Escritorio"),
                            ("TABLET", "Tablet"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "pistas_usadas",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                ("explicacion_solicitada", models.BooleanField(default=False)),
                ("tiempo_en_explicacion", models.IntegerField(default=0)),
                ("xp_ganado", models.IntegerField(default=0)),
                (
                    "bonus_aplicado",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("intentos_respuesta", models.IntegerField(default=1)),
                ("cambio_respuesta", models.BooleanField(default=False)),
                ("patron_respuesta", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pregunta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respuestas_usuarios",
                        to="icfes.preguntaicfes",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="respuestas_icfes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Respuesta Usuario ICFES",
                "verbose_name_plural": "Respuestas Usuarios ICFES",
                "db_table": "respuestas_usuarios_icfes",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="respuestas__user_id_b64d6f_idx",
                    ),
                    models.Index(
                        fields=["pregunta"], name="respuestas__pregunt_5172f6_idx"
                    ),
                    models.Index(
                        fields=["session_id"], name="respuestas__session_46be6e_idx"
                    ),
                    models.Index(
                        fields=["tipo_evaluacion"],
                        name="respuestas__tipo_ev_d5d7b2_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="preguntaicfes",
            index=models.Index(
                fields=["area_evaluacion", "nivel_dificultad"],
                name="preguntas_i_area_ev_9b8f78_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="preguntaicfes",
            index=models.Index(
                fields=["competencia"], name="preguntas_i_compete_d0aee3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="preguntaicfes",
            index=models.Index(
                fields=["activa", "verificada"], name="preguntas_i_activa_e22698_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="preguntaicfes",
            index=models.Index(
                fields=["grado_escolar"], name="preguntas_i_grado_e_978147_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="pistapregunta",
            unique_together={("pregunta", "numero_pista")},
        ),
        migrations.AlterUniqueTogether(
            name="opcionrespuesta",
            unique_together={("pregunta", "letra_opcion")},
        ),
    ]
