# Generated by Django 4.2.23 on 2025-07-15 17:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='A_BTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('hypothesis', models.TextField()),
                ('control_variant', models.CharField(default='A', max_length=50)),
                ('test_variant', models.CharField(default='B', max_length=50)),
                ('traffic_split', models.FloatField(default=50.0)),
                ('primary_metric', models.CharField(max_length=100)),
                ('secondary_metrics', models.JSONField(default=list)),
                ('success_criteria', models.JSONField(default=dict)),
                ('target_audience', models.JSONField(default=dict)),
                ('sample_size_required', models.IntegerField(default=1000)),
                ('confidence_level', models.FloatField(default=95.0)),
                ('status', models.CharField(choices=[('DRAFT', 'Borrador'), ('ACTIVE', 'Activo'), ('PAUSED', 'Pausado'), ('COMPLETED', 'Completado'), ('CANCELLED', 'Cancelado')], default='DRAFT', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('planned_duration_days', models.IntegerField(default=14)),
                ('control_conversions', models.IntegerField(default=0)),
                ('test_conversions', models.IntegerField(default=0)),
                ('control_participants', models.IntegerField(default=0)),
                ('test_participants', models.IntegerField(default=0)),
                ('statistical_significance', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ab_tests',
            },
        ),
        migrations.CreateModel(
            name='ContentAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content_type', models.CharField(choices=[('QUESTION', 'Pregunta'), ('EXPLANATION', 'Explicación'), ('TOPIC', 'Tema'), ('QUIZ', 'Quiz')], max_length=20)),
                ('content_id', models.IntegerField()),
                ('content_reference', models.CharField(max_length=200)),
                ('total_views', models.IntegerField(default=0)),
                ('unique_users', models.IntegerField(default=0)),
                ('total_interactions', models.IntegerField(default=0)),
                ('average_rating', models.FloatField(default=0.0)),
                ('difficulty_rating', models.FloatField(default=0.0)),
                ('clarity_rating', models.FloatField(default=0.0)),
                ('average_response_time', models.FloatField(default=0.0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('abandonment_rate', models.FloatField(default=0.0)),
                ('time_spent_average', models.FloatField(default=0.0)),
                ('interaction_depth', models.FloatField(default=0.0)),
                ('return_rate', models.FloatField(default=0.0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('analysis_period_days', models.IntegerField(default=30)),
            ],
            options={
                'db_table': 'content_analytics',
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_study_time_minutes', models.IntegerField(default=0)),
                ('total_questions_answered', models.IntegerField(default=0)),
                ('total_correct_answers', models.IntegerField(default=0)),
                ('average_accuracy', models.FloatField(default=0.0)),
                ('mathematics_accuracy', models.FloatField(default=0.0)),
                ('reading_accuracy', models.FloatField(default=0.0)),
                ('natural_sciences_accuracy', models.FloatField(default=0.0)),
                ('social_studies_accuracy', models.FloatField(default=0.0)),
                ('english_accuracy', models.FloatField(default=0.0)),
                ('mathematics_avg_time', models.FloatField(default=0.0)),
                ('reading_avg_time', models.FloatField(default=0.0)),
                ('natural_sciences_avg_time', models.FloatField(default=0.0)),
                ('social_studies_avg_time', models.FloatField(default=0.0)),
                ('english_avg_time', models.FloatField(default=0.0)),
                ('most_active_hour', models.IntegerField(default=14)),
                ('most_active_day', models.IntegerField(default=1)),
                ('average_session_duration', models.FloatField(default=0.0)),
                ('study_streak_days', models.IntegerField(default=0)),
                ('weekly_improvement_rate', models.FloatField(default=0.0)),
                ('monthly_improvement_rate', models.FloatField(default=0.0)),
                ('skill_growth_trend', models.JSONField(default=dict)),
                ('predicted_icfes_score', models.IntegerField(default=0)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('learning_velocity', models.FloatField(default=1.0)),
                ('recommended_study_areas', models.JSONField(default=list)),
                ('optimal_study_schedule', models.JSONField(default=dict)),
                ('personalized_difficulty', models.CharField(default='MEDIUM', max_length=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'learning_analytics',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('metric_type', models.CharField(choices=[('USER_ENGAGEMENT', 'Engagement de Usuario'), ('LEARNING_EFFECTIVENESS', 'Efectividad de Aprendizaje'), ('FEATURE_USAGE', 'Uso de Funcionalidades'), ('TECHNICAL_PERFORMANCE', 'Rendimiento Técnico'), ('CONTENT_QUALITY', 'Calidad de Contenido')], max_length=30)),
                ('metric_name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('target_value', models.FloatField(blank=True, null=True)),
                ('previous_value', models.FloatField(blank=True, null=True)),
                ('dimension_filters', models.JSONField(default=dict)),
                ('calculation_method', models.TextField()),
                ('data_source', models.CharField(max_length=100)),
                ('confidence_level', models.FloatField(default=100.0)),
                ('sample_size', models.IntegerField(default=0)),
                ('calculation_time', models.FloatField(default=0.0)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'performance_metrics',
            },
        ),
        migrations.CreateModel(
            name='SessionAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('session_type', models.CharField(choices=[('PRACTICE', 'Práctica'), ('QUIZ', 'Quiz'), ('BATTLE', 'Batalla'), ('ICFES_SIMULATION', 'Simulacro ICFES'), ('FREE_STUDY', 'Estudio Libre')], max_length=20)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('questions_attempted', models.IntegerField(default=0)),
                ('questions_correct', models.IntegerField(default=0)),
                ('accuracy_percentage', models.FloatField(default=0.0)),
                ('time_per_question', models.JSONField(default=list)),
                ('areas_covered', models.JSONField(default=list)),
                ('difficulty_distribution', models.JSONField(default=dict)),
                ('focus_score', models.FloatField(default=0.0)),
                ('completion_rate', models.FloatField(default=0.0)),
                ('interruptions_count', models.IntegerField(default=0)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('study_environment', models.CharField(blank=True, max_length=50, null=True)),
                ('xp_gained', models.IntegerField(default=0)),
                ('coins_earned', models.IntegerField(default=0)),
                ('achievements_unlocked', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'session_analytics',
            },
        ),
        migrations.CreateModel(
            name='SubjectAnalytics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(choices=[('MATHEMATICS', 'Matemáticas'), ('READING', 'Lectura Crítica'), ('NATURAL_SCIENCES', 'Ciencias Naturales'), ('SOCIAL_STUDIES', 'Ciencias Sociales'), ('ENGLISH', 'Inglés')], max_length=20)),
                ('questions_answered', models.IntegerField(default=0)),
                ('correct_answers', models.IntegerField(default=0)),
                ('accuracy_percentage', models.FloatField(default=0.0)),
                ('total_time_minutes', models.IntegerField(default=0)),
                ('average_time_per_question', models.FloatField(default=0.0)),
                ('easy_accuracy', models.FloatField(default=0.0)),
                ('medium_accuracy', models.FloatField(default=0.0)),
                ('hard_accuracy', models.FloatField(default=0.0)),
                ('topic_performance', models.JSONField(default=dict)),
                ('weakest_topics', models.JSONField(default=list)),
                ('strongest_topics', models.JSONField(default=list)),
                ('progress_trend', models.JSONField(default=list)),
                ('improvement_rate', models.FloatField(default=0.0)),
                ('recent_performance', models.FloatField(default=0.0)),
                ('recommended_difficulty', models.CharField(default='MEDIUM', max_length=10)),
                ('priority_topics', models.JSONField(default=list)),
                ('study_time_recommendation', models.IntegerField(default=60)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subject_analytics',
            },
        ),
        migrations.CreateModel(
            name='UserEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('LOGIN', 'Inicio de Sesión'), ('LOGOUT', 'Cierre de Sesión'), ('QUESTION_ANSWERED', 'Pregunta Respondida'), ('QUIZ_STARTED', 'Quiz Iniciado'), ('QUIZ_COMPLETED', 'Quiz Completado'), ('BATTLE_STARTED', 'Batalla Iniciada'), ('BATTLE_COMPLETED', 'Batalla Completada'), ('ACHIEVEMENT_UNLOCKED', 'Logro Desbloqueado'), ('LEVEL_UP', 'Subida de Nivel'), ('ACADEMY_JOINED', 'Unión a Academia'), ('POWERUP_USED', 'Power-up Usado'), ('STUDY_SESSION', 'Sesión de Estudio'), ('PAGE_VIEW', 'Vista de Página'), ('FEATURE_USED', 'Función Utilizada')], max_length=30)),
                ('category', models.CharField(choices=[('LEARNING', 'Aprendizaje'), ('SOCIAL', 'Social'), ('GAMIFICATION', 'Gamificación'), ('NAVIGATION', 'Navegación'), ('ENGAGEMENT', 'Compromiso')], max_length=20)),
                ('event_data', models.JSONField(default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True, max_length=500, null=True)),
                ('page_url', models.URLField(blank=True, max_length=500, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'user_events',
            },
        ),
        migrations.CreateModel(
            name='UserTestParticipation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('variant', models.CharField(max_length=50)),
                ('conversion_achieved', models.BooleanField(default=False)),
                ('conversion_value', models.FloatField(default=0.0)),
                ('conversion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('ab_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='analytics.a_btest')),
            ],
            options={
                'db_table': 'user_test_participations',
            },
        ),
    ]
