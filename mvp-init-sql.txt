-- ICFES Math MVP Database Schema
-- Diseñado para ser estándar y funcionar con cualquier asignatura

-- Enable UUID extension
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Users table (simplified)
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    username VARCHAR(50) UNIQUE NOT NULL,
    display_name VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Subjects table (extendible to other subjects)
CREATE TABLE subjects (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(50) NOT NULL,
    code VARCHAR(20) UNIQUE NOT NULL,
    description TEXT
);

-- Topics/Areas within subjects
CREATE TABLE topics (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    subject_id UUID REFERENCES subjects(id),
    name VARCHAR(100) NOT NULL,
    code VARCHAR(50),
    parent_topic_id UUID REFERENCES topics(id),
    order_index INTEGER DEFAULT 0
);

-- Competencies (ICFES competencies)
CREATE TABLE competencies (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    subject_id UUID REFERENCES subjects(id),
    name VARCHAR(100) NOT NULL,
    code VARCHAR(50),
    description TEXT
);

-- Questions bank
CREATE TABLE questions (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    subject_id UUID REFERENCES subjects(id),
    topic_id UUID REFERENCES topics(id),
    competency_id UUID REFERENCES competencies(id),
    question_text TEXT NOT NULL,
    question_type VARCHAR(50) DEFAULT 'multiple_choice',
    difficulty_level INTEGER CHECK (difficulty_level BETWEEN 1 AND 5),
    estimated_time_seconds INTEGER DEFAULT 120,
    points INTEGER DEFAULT 10,
    explanation_text TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Answer options for questions
CREATE TABLE answer_options (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    question_id UUID REFERENCES questions(id) ON DELETE CASCADE,
    option_letter CHAR(1) NOT NULL,
    option_text TEXT NOT NULL,
    is_correct BOOLEAN DEFAULT FALSE,
    explanation TEXT,
    UNIQUE(question_id, option_letter)
);

-- Study sessions
CREATE TABLE study_sessions (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(id),
    subject_id UUID REFERENCES subjects(id),
    session_number INTEGER NOT NULL,
    started_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    completed_at TIMESTAMP,
    total_questions INTEGER DEFAULT 10,
    correct_answers INTEGER DEFAULT 0,
    total_time_seconds INTEGER,
    xp_earned INTEGER DEFAULT 0,
    performance_score DECIMAL(5,2)
);

-- Question responses
CREATE TABLE question_responses (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    session_id UUID REFERENCES study_sessions(id),
    question_id UUID REFERENCES questions(id),
    user_id UUID REFERENCES users(id),
    selected_option CHAR(1),
    is_correct BOOLEAN,
    time_spent_seconds INTEGER,
    confidence_level INTEGER CHECK (confidence_level BETWEEN 1 AND 5),
    used_explanation BOOLEAN DEFAULT FALSE,
    answered_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User gamification stats
CREATE TABLE user_stats (
    user_id UUID PRIMARY KEY REFERENCES users(id),
    total_xp INTEGER DEFAULT 0,
    current_level INTEGER DEFAULT 1,
    current_streak INTEGER DEFAULT 0,
    longest_streak INTEGER DEFAULT 0,
    last_activity_date DATE,
    total_questions_answered INTEGER DEFAULT 0,
    total_correct_answers INTEGER DEFAULT 0,
    average_accuracy DECIMAL(5,2) DEFAULT 0,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Achievements/Badges
CREATE TABLE achievements (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) NOT NULL,
    description TEXT,
    icon_name VARCHAR(50),
    xp_reward INTEGER DEFAULT 0,
    requirement_type VARCHAR(50), -- 'streak', 'accuracy', 'questions', 'speed'
    requirement_value INTEGER,
    badge_color VARCHAR(7) DEFAULT '#FFD700'
);

-- User achievements
CREATE TABLE user_achievements (
    user_id UUID REFERENCES users(id),
    achievement_id UUID REFERENCES achievements(id),
    unlocked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (user_id, achievement_id)
);

-- Daily goals
CREATE TABLE daily_goals (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(id),
    goal_date DATE NOT NULL,
    target_questions INTEGER DEFAULT 10,
    target_xp INTEGER DEFAULT 100,
    questions_completed INTEGER DEFAULT 0,
    xp_earned INTEGER DEFAULT 0,
    is_completed BOOLEAN DEFAULT FALSE,
    UNIQUE(user_id, goal_date)
);

-- Notification queue
CREATE TABLE notifications (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(id),
    notification_type VARCHAR(50),
    title VARCHAR(200),
    message TEXT,
    is_read BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Indexes for performance
CREATE INDEX idx_questions_subject_topic ON questions(subject_id, topic_id);
CREATE INDEX idx_responses_session ON question_responses(session_id);
CREATE INDEX idx_responses_user ON question_responses(user_id);
CREATE INDEX idx_sessions_user ON study_sessions(user_id);
CREATE INDEX idx_daily_goals_user_date ON daily_goals(user_id, goal_date);

-- Insert initial data

-- Mathematics subject
INSERT INTO subjects (id, name, code, description) VALUES 
    ('11111111-1111-1111-1111-111111111111', 'Matemáticas', 'MATH', 'Prueba de Matemáticas ICFES Saber 11');

-- Mathematics competencies
INSERT INTO competencies (id, subject_id, name, code, description) VALUES 
    ('21111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', 'Interpretación y representación', 'INT_REP', 'Comprender y transformar información matemática'),
    ('21111111-1111-1111-1111-111111111112', '11111111-1111-1111-1111-111111111111', 'Formulación y ejecución', 'FORM_EJEC', 'Plantear y resolver problemas matemáticos'),
    ('21111111-1111-1111-1111-111111111113', '11111111-1111-1111-1111-111111111111', 'Argumentación', 'ARG', 'Justificar y validar procedimientos y respuestas');

-- Mathematics topics
INSERT INTO topics (id, subject_id, name, code, order_index) VALUES 
    ('31111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', 'Álgebra y funciones', 'ALG_FUNC', 1),
    ('31111111-1111-1111-1111-111111111112', '11111111-1111-1111-1111-111111111111', 'Geometría', 'GEOM', 2),
    ('31111111-1111-1111-1111-111111111113', '11111111-1111-1111-1111-111111111111', 'Estadística y probabilidad', 'STATS_PROB', 3),
    ('31111111-1111-1111-1111-111111111114', '11111111-1111-1111-1111-111111111111', 'Cálculo', 'CALC', 4);

-- Sample mathematics questions
INSERT INTO questions (id, subject_id, topic_id, competency_id, question_text, difficulty_level, points, explanation_text) VALUES 
    ('41111111-1111-1111-1111-111111111111', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111111', '21111111-1111-1111-1111-111111111111', 
     'Si f(x) = 2x + 3 y g(x) = x² - 1, ¿cuál es el valor de f(g(2))?', 3, 10,
     'Primero calculamos g(2) = 2² - 1 = 4 - 1 = 3. Luego calculamos f(3) = 2(3) + 3 = 6 + 3 = 9.'),
    
    ('41111111-1111-1111-1111-111111111112', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111112', '21111111-1111-1111-1111-111111111112', 
     'Un triángulo tiene lados de 3, 4 y 5 unidades. ¿Cuál es su área?', 2, 10,
     'Este es un triángulo rectángulo (3² + 4² = 5²). El área es (base × altura) / 2 = (3 × 4) / 2 = 6 unidades²'),
    
    ('41111111-1111-1111-1111-111111111113', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111113', '21111111-1111-1111-1111-111111111113', 
     'En una bolsa hay 3 bolas rojas y 7 bolas azules. ¿Cuál es la probabilidad de sacar una bola roja?', 2, 10,
     'Probabilidad = casos favorables / casos totales = 3 / (3 + 7) = 3/10 = 0.3 = 30%'),
    
    ('41111111-1111-1111-1111-111111111114', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111111', '21111111-1111-1111-1111-111111111112', 
     'Resuelve la ecuación: 2x² - 8x + 6 = 0', 3, 15,
     'Dividiendo por 2: x² - 4x + 3 = 0. Factorizando: (x-1)(x-3) = 0. Por lo tanto x = 1 o x = 3'),
    
    ('41111111-1111-1111-1111-111111111115', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111114', '21111111-1111-1111-1111-111111111111', 
     'La derivada de f(x) = 3x² + 2x - 5 es:', 4, 15,
     'Aplicando la regla de la potencia: f''(x) = 6x + 2'),
    
    ('41111111-1111-1111-1111-111111111116', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111112', '21111111-1111-1111-1111-111111111113', 
     'El perímetro de un círculo con radio 7 cm es:', 2, 10,
     'El perímetro (circunferencia) = 2πr = 2π(7) = 14π ≈ 43.98 cm'),
    
    ('41111111-1111-1111-1111-111111111117', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111113', '21111111-1111-1111-1111-111111111111', 
     'La media de los números 12, 15, 18, 20, 25 es:', 2, 10,
     'Media = suma / cantidad = (12 + 15 + 18 + 20 + 25) / 5 = 90 / 5 = 18'),
    
    ('41111111-1111-1111-1111-111111111118', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111111', '21111111-1111-1111-1111-111111111112', 
     'Si log₂(x) = 3, entonces x es igual a:', 3, 10,
     'Si log₂(x) = 3, entonces 2³ = x, por lo tanto x = 8'),
    
    ('41111111-1111-1111-1111-111111111119', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111112', '21111111-1111-1111-1111-111111111112', 
     'Dos ángulos son complementarios. Si uno mide 35°, ¿cuánto mide el otro?', 1, 10,
     'Ángulos complementarios suman 90°. Si uno mide 35°, el otro mide 90° - 35° = 55°'),
    
    ('41111111-1111-1111-1111-111111111120', '11111111-1111-1111-1111-111111111111', '31111111-1111-1111-1111-111111111114', '21111111-1111-1111-1111-111111111113', 
     '¿Cuál es el límite de (x² - 4)/(x - 2) cuando x tiende a 2?', 4, 15,
     'Factorizando: (x² - 4)/(x - 2) = (x+2)(x-2)/(x-2) = x+2. Cuando x→2, el límite es 4');

-- Answer options for questions
INSERT INTO answer_options (question_id, option_letter, option_text, is_correct, explanation) VALUES 
    -- Question 1 options
    ('41111111-1111-1111-1111-111111111111', 'A', '7', false, 'Revisa el orden de las operaciones'),
    ('41111111-1111-1111-1111-111111111111', 'B', '9', true, 'Correcto! g(2) = 3, luego f(3) = 9'),
    ('41111111-1111-1111-1111-111111111111', 'C', '11', false, 'Verifica tus cálculos'),
    ('41111111-1111-1111-1111-111111111111', 'D', '13', false, 'Recuerda evaluar g(x) primero'),
    
    -- Question 2 options
    ('41111111-1111-1111-1111-111111111112', 'A', '6', true, 'Correcto! Es un triángulo rectángulo'),
    ('41111111-1111-1111-1111-111111111112', 'B', '7.5', false, 'Esa sería si usaras 3×5/2'),
    ('41111111-1111-1111-1111-111111111112', 'C', '10', false, 'Revisa la fórmula del área'),
    ('41111111-1111-1111-1111-111111111112', 'D', '12', false, 'Recuerda dividir entre 2'),
    
    -- Question 3 options
    ('41111111-1111-1111-1111-111111111113', 'A', '3/7', false, 'Esa sería si solo hubiera bolas rojas y azules fueran 7'),
    ('41111111-1111-1111-1111-111111111113', 'B', '3/10', true, 'Correcto! 3 rojas de 10 totales'),
    ('41111111-1111-1111-1111-111111111113', 'C', '7/10', false, 'Esa es la probabilidad de sacar azul'),
    ('41111111-1111-1111-1111-111111111113', 'D', '1/3', false, 'Cuenta el total de bolas correctamente'),
    
    -- Question 4 options
    ('41111111-1111-1111-1111-111111111114', 'A', 'x = 1, x = 3', true, 'Correcto! Bien factorizado'),
    ('41111111-1111-1111-1111-111111111114', 'B', 'x = 2, x = 3', false, 'Verifica tu factorización'),
    ('41111111-1111-1111-1111-111111111114', 'C', 'x = -1, x = -3', false, 'Cuidado con los signos'),
    ('41111111-1111-1111-1111-111111111114', 'D', 'x = 0, x = 4', false, 'Revisa el proceso de factorización'),
    
    -- Question 5 options
    ('41111111-1111-1111-1111-111111111115', 'A', '6x - 2', false, 'Revisa la derivada del término lineal'),
    ('41111111-1111-1111-1111-111111111115', 'B', '6x + 2', true, 'Correcto! d/dx(3x²) = 6x, d/dx(2x) = 2'),
    ('41111111-1111-1111-1111-111111111115', 'C', '3x + 2', false, 'Aplica correctamente la regla de la potencia'),
    ('41111111-1111-1111-1111-111111111115', 'D', '6x² + 2', false, 'La derivada de x² es 2x, no x²'),
    
    -- Question 6 options
    ('41111111-1111-1111-1111-111111111116', 'A', '14 cm', false, 'Eso sería el diámetro'),
    ('41111111-1111-1111-1111-111111111116', 'B', '14π cm', true, 'Correcto! C = 2πr = 14π'),
    ('41111111-1111-1111-1111-111111111116', 'C', '49π cm', false, 'Eso sería el área'),
    ('41111111-1111-1111-1111-111111111116', 'D', '7π cm', false, 'Recuerda multiplicar por 2'),
    
    -- Question 7 options
    ('41111111-1111-1111-1111-111111111117', 'A', '15', false, 'Suma todos y divide entre 5'),
    ('41111111-1111-1111-1111-111111111117', 'B', '18', true, 'Correcto! 90/5 = 18'),
    ('41111111-1111-1111-1111-111111111117', 'C', '20', false, 'Ese es uno de los valores, no la media'),
    ('41111111-1111-1111-1111-111111111117', 'D', '22', false, 'Verifica tu suma'),
    
    -- Question 8 options
    ('41111111-1111-1111-1111-111111111118', 'A', '3', false, 'Recuerda que log₂(x) = 3 significa 2³ = x'),
    ('41111111-1111-1111-1111-111111111118', 'B', '6', false, 'No es 2×3'),
    ('41111111-1111-1111-1111-111111111118', 'C', '8', true, 'Correcto! 2³ = 8'),
    ('41111111-1111-1111-1111-111111111118', 'D', '9', false, 'Eso sería 3²'),
    
    -- Question 9 options
    ('41111111-1111-1111-1111-111111111119', 'A', '45°', false, 'Revisa la definición de complementarios'),
    ('41111111-1111-1111-1111-111111111119', 'B', '55°', true, 'Correcto! 90° - 35° = 55°'),
    ('41111111-1111-1111-1111-111111111119', 'C', '65°', false, 'Los complementarios suman 90°'),
    ('41111111-1111-1111-1111-111111111119', 'D', '145°', false, 'Eso sería si fueran suplementarios'),
    
    -- Question 10 options
    ('41111111-1111-1111-1111-111111111120', 'A', '0', false, 'Simplifica la expresión primero'),
    ('41111111-1111-1111-1111-111111111120', 'B', '2', false, 'Factoriza correctamente'),
    ('41111111-1111-1111-1111-111111111120', 'C', '4', true, 'Correcto! (x+2)(x-2)/(x-2) = x+2 → 4'),
    ('41111111-1111-1111-1111-111111111120', 'D', 'No existe', false, 'El límite sí existe después de simplificar');

-- Achievements
INSERT INTO achievements (id, name, description, icon_name, xp_reward, requirement_type, requirement_value, badge_color) VALUES 
    ('51111111-1111-1111-1111-111111111111', 'Primer Paso', 'Completa tu primera sesión', 'star', 50, 'sessions', 1, '#FFD700'),
    ('51111111-1111-1111-1111-111111111112', 'Racha de 3', 'Mantén una racha de 3 días', 'fire', 100, 'streak', 3, '#FF6B6B'),
    ('51111111-1111-1111-1111-111111111113', 'Precisión', 'Logra 80% de precisión en una sesión', 'target', 75, 'accuracy', 80, '#4ECDC4'),
    ('51111111-1111-1111-1111-111111111114', 'Velocista', 'Completa 10 preguntas en menos de 15 minutos', 'zap', 100, 'speed', 900, '#A8E6CF'),
    ('51111111-1111-1111-1111-111111111115', 'Matemático', 'Responde 50 preguntas correctamente', 'calculator', 200, 'questions', 50, '#7B68EE');

-- Create functions for XP calculation
CREATE OR REPLACE FUNCTION calculate_xp(
    correct_answers INT,
    total_questions INT,
    time_seconds INT,
    streak_bonus INT DEFAULT 0
) RETURNS INT AS $$
DECLARE
    base_xp INT;
    accuracy_bonus INT;
    speed_bonus INT;
    total_xp INT;
BEGIN
    -- Base XP: 10 per correct answer
    base_xp := correct_answers * 10;
    
    -- Accuracy bonus: extra XP for high accuracy
    IF total_questions > 0 AND (correct_answers::FLOAT / total_questions) >= 0.8 THEN
        accuracy_bonus := 20;
    ELSIF (correct_answers::FLOAT / total_questions) >= 0.6 THEN
        accuracy_bonus := 10;
    ELSE
        accuracy_bonus := 0;
    END IF;
    
    -- Speed bonus: if average time per question < 60 seconds
    IF total_questions > 0 AND (time_seconds::FLOAT / total_questions) < 60 THEN
        speed_bonus := 15;
    ELSE
        speed_bonus := 0;
    END IF;
    
    -- Calculate total with streak multiplier
    total_xp := base_xp + accuracy_bonus + speed_bonus;
    IF streak_bonus > 0 THEN
        total_xp := total_xp * (1 + (streak_bonus * 0.1));
    END IF;
    
    RETURN total_xp;
END;
$$ LANGUAGE plpgsql;

-- Create trigger to update user stats
CREATE OR REPLACE FUNCTION update_user_stats() RETURNS TRIGGER AS $$
BEGIN
    -- Update or insert user stats
    INSERT INTO user_stats (user_id, total_xp, total_questions_answered, total_correct_answers)
    VALUES (NEW.user_id, NEW.xp_earned, NEW.total_questions, NEW.correct_answers)
    ON CONFLICT (user_id) DO UPDATE SET
        total_xp = user_stats.total_xp + NEW.xp_earned,
        total_questions_answered = user_stats.total_questions_answered + NEW.total_questions,
        total_correct_answers = user_stats.total_correct_answers + NEW.correct_answers,
        average_accuracy = CASE 
            WHEN (user_stats.total_questions_answered + NEW.total_questions) > 0 
            THEN ((user_stats.total_correct_answers + NEW.correct_answers)::FLOAT / 
                  (user_stats.total_questions_answered + NEW.total_questions)) * 100
            ELSE 0
        END,
        current_level = CASE 
            WHEN (user_stats.total_xp + NEW.xp_earned) >= 1000 THEN 5
            WHEN (user_stats.total_xp + NEW.xp_earned) >= 500 THEN 4
            WHEN (user_stats.total_xp + NEW.xp_earned) >= 200 THEN 3
            WHEN (user_stats.total_xp + NEW.xp_earned) >= 100 THEN 2
            ELSE 1
        END,
        last_activity_date = CURRENT_DATE,
        updated_at = CURRENT_TIMESTAMP;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_user_stats_trigger
AFTER INSERT ON study_sessions
FOR EACH ROW
WHEN (NEW.completed_at IS NOT NULL)
EXECUTE FUNCTION update_user_stats();